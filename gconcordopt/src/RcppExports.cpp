// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// cc_ista
SEXP cc_ista(const Eigen::Map<Eigen::MatrixXd>& D, double lam, const Eigen::Map<Eigen::MatrixXd> & pMat, const Eigen::MappedSparseMatrix<double>& X0_, int penalize_diag = 0, int BBstep = 1, double tol = 1e-5, int maxit = 100, int info = 0, int trkeigs = 0, int DisS = 0);
RcppExport SEXP gconcordopt_cc_ista(SEXP DSEXP, SEXP lamSEXP, SEXP pMatSEXP, SEXP X0_SEXP, SEXP penalize_diagSEXP, SEXP BBstepSEXP, SEXP tolSEXP, SEXP maxitSEXP, SEXP infoSEXP, SEXP trkeigsSEXP, SEXP DisSSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type D(DSEXP );
        Rcpp::traits::input_parameter< double >::type lam(lamSEXP );
        Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type pMat(DSEXP );
        Rcpp::traits::input_parameter< const Eigen::MappedSparseMatrix<double>& >::type X0_(X0_SEXP );
        Rcpp::traits::input_parameter< int >::type penalize_diag(penalize_diagSEXP );
        Rcpp::traits::input_parameter< int >::type BBstep(BBstepSEXP );
        Rcpp::traits::input_parameter< double >::type tol(tolSEXP );
        Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP );
        Rcpp::traits::input_parameter< int >::type info(infoSEXP );
        Rcpp::traits::input_parameter< int >::type trkeigs(trkeigsSEXP );
        Rcpp::traits::input_parameter< int >::type DisS(DisSSEXP );
        SEXP __result = cc_ista(D, lam, pMat, X0_, penalize_diag, BBstep, tol, maxit, info, trkeigs, DisS);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// cc_fista
SEXP cc_fista(const Eigen::Map<Eigen::MatrixXd>& D, double lam, const Eigen::Map<Eigen::MatrixXd> & pMat, const Eigen::MappedSparseMatrix<double>& X0_, int penalize_diag = 0, int steptype = 1, double tol = 1e-5, int maxit = 100, int info = 0, int trkeigs = 0, int DisS = 0);
RcppExport SEXP gconcordopt_cc_fista(SEXP DSEXP, SEXP lamSEXP, SEXP pMatSEXP, SEXP X0_SEXP, SEXP penalize_diagSEXP, SEXP steptypeSEXP, SEXP tolSEXP, SEXP maxitSEXP, SEXP infoSEXP, SEXP trkeigsSEXP, SEXP DisSSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type D(DSEXP );
        Rcpp::traits::input_parameter< double >::type lam(lamSEXP );
        Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type pMat(DSEXP );
        Rcpp::traits::input_parameter< const Eigen::MappedSparseMatrix<double>& >::type X0_(X0_SEXP );
        Rcpp::traits::input_parameter< int >::type penalize_diag(penalize_diagSEXP );
        Rcpp::traits::input_parameter< int >::type steptype(steptypeSEXP );
        Rcpp::traits::input_parameter< double >::type tol(tolSEXP );
        Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP );
        Rcpp::traits::input_parameter< int >::type info(infoSEXP );
        Rcpp::traits::input_parameter< int >::type trkeigs(trkeigsSEXP );
        Rcpp::traits::input_parameter< int >::type DisS(DisSSEXP );
        SEXP __result = cc_fista(D, lam, pMat, X0_, penalize_diag, steptype, tol, maxit, info, trkeigs, DisS);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// cc_elastic_ista
SEXP cc_elastic_ista(const Eigen::Map<Eigen::MatrixXd>& D, double lam, const Eigen::Map<Eigen::MatrixXd> & pMat, int penalize_diag = 0, int BBstep = 1, double tol = 1e-5, int maxit = 100, int info = 0, int trkeigs = 0, int DisS = 0, double en = 1.0);
RcppExport SEXP gconcordopt_cc_elastic_ista(SEXP DSEXP, SEXP lamSEXP, SEXP pMatSEXP, SEXP penalize_diagSEXP, SEXP BBstepSEXP, SEXP tolSEXP, SEXP maxitSEXP, SEXP infoSEXP, SEXP trkeigsSEXP, SEXP DisSSEXP, SEXP enSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type D(DSEXP );
        Rcpp::traits::input_parameter< double >::type lam(lamSEXP );
        Rcpp::traits::input_parameter< const Eigen::Map<Eigen::MatrixXd>& >::type pMat(DSEXP );
        Rcpp::traits::input_parameter< int >::type penalize_diag(penalize_diagSEXP );
        Rcpp::traits::input_parameter< int >::type BBstep(BBstepSEXP );
        Rcpp::traits::input_parameter< double >::type tol(tolSEXP );
        Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP );
        Rcpp::traits::input_parameter< int >::type info(infoSEXP );
        Rcpp::traits::input_parameter< int >::type trkeigs(trkeigsSEXP );
        Rcpp::traits::input_parameter< int >::type DisS(DisSSEXP );
        Rcpp::traits::input_parameter< double >::type en(enSEXP );
        SEXP __result = cc_elastic_ista(D, lam, pMat, penalize_diag, BBstep, tol, maxit, info, trkeigs, DisS, en);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
